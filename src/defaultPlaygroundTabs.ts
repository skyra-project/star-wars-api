import type { MiddlewareOptions } from '@apollographql/graphql-playground-html';

const isDev = process.platform === 'win32' || process.platform === 'darwin';
const endpoint = isDev ? `http://localhost:${process.env.PORT || 8293}` : 'https://swapi.skyra.pw/';

const defaultTabs: NonNullable<MiddlewareOptions['tabs']> = [
	{
		name: 'Full Film Details',
		endpoint,
		query: [
			'{',
			'\tgetFilm(film: 4) {',
			'\t\tdirector',
			'\t\tcharacters {',
			'\t\t\tbirthYear',
			'\t\t\teyeColors',
			'\t\t\tgender',
			'\t\t\thairColors',
			'\t\t\theight',
			'\t\t\tmass',
			'\t\t\tname',
			'\t\t\tskinColors',
			'\t\t}',
			'\t\tplanets {',
			'\t\t\tclimates',
			'\t\t\tdiameter',
			'\t\t\tgravity',
			'\t\t\tname',
			'\t\t\torbitalPeriod',
			'\t\t\tpopulation',
			'\t\t\trotationPeriod',
			'\t\t\tsurfaceWater',
			'\t\t\tterrains',
			'\t\t}',
			'\t\tspecies {',
			'\t\t\taverageHeight',
			'\t\t\taverageLifespan',
			'\t\t\tclassification',
			'\t\t\tdesignation',
			'\t\t\teyeColors',
			'\t\t\thairColors',
			'\t\t\tlanguage',
			'\t\t\tname',
			'\t\t\tskinColors',
			'\t\t}',
			'\t\tstarships {',
			'\t\t\tcargoCapacity',
			'\t\t\tconsumables',
			'\t\t\tcostInCredits',
			'\t\t\tcrew',
			'\t\t\thyperdriveRating',
			'\t\t\tlength',
			'\t\t\tmanufacturers',
			'\t\t\tmaxAtmospheringSpeed',
			'\t\t\tMGLT',
			'\t\t\tmodel',
			'\t\t\tname',
			'\t\t\tpassengers',
			'\t\t\tstarshipClass',
			'\t\t}',
			'\t\tvehicles {',
			'\t\t\tcargoCapacity',
			'\t\t\tconsumables',
			'\t\t\tcostInCredits',
			'\t\t\tcrew',
			'\t\t\tlength',
			'\t\t\tmanufacturers',
			'\t\t\tmaxAtmospheringSpeed',
			'\t\t\tmodel',
			'\t\t\tname',
			'\t\t\tpassengers',
			'\t\t\tvehicleClass',
			'\t\t}',
			'\t}',
			'}',
			''
		].join('\n')
	},
	{
		name: 'Person Details with variables',
		endpoint,
		variables: ['{', '\t"person": "lukeskywalker"', '}'].join('\n'),
		query: [
			'query($person: StarWarsPeople!) {',
			'\tgetPerson(person: $person) {',
			'\t\tbirthYear',
			'\t\teyeColors',
			'\t\tfilms {',
			'\t\t\ttitle',
			'\t\t}',
			'\t\tgender',
			'\t\thairColors',
			'\t\theight',
			'\t\thomeworld {',
			'\t\t\tname',
			'\t\t}',
			'\t\tmass',
			'\t\tname',
			'\t\tskinColors',
			'\t\tspecies {',
			'\t\t\tname',
			'\t\t}',
			'\t\tstarships {',
			'\t\t\tname',
			'\t\t}',
			'\t\tvehicles {',
			'\t\t\tname',
			'\t\t}',
			'\t}',
			'}',
			''
		].join('\n')
	},
	{
		name: 'Person with fragments and variables',
		endpoint,
		variables: ['{', '\t"person": "lukeskywalker"', '}'].join('\n'),
		query: [
			'fragment data on Person {',
			'\tbirthYear',
			'\teyeColors',
			'\tfilms {',
			'\t\ttitle',
			'\t}',
			'\tgender',
			'\thairColors',
			'\theight',
			'\thomeworld {',
			'\t\tname',
			'\t}',
			'\tmass',
			'\tname',
			'\tskinColors',
			'\tspecies {',
			'\t\tname',
			'\t}',
			'\tstarships {',
			'\t\tname',
			'\t}',
			'\tvehicles {',
			'\t\tname',
			'\t}',
			'}',
			'',
			'query($person: StarWarsPeople!) {',
			'\tgetPerson(person: $person) {',
			'\t\t...data',
			'\t}',
			'}',
			''
		].join('\n')
	}
];

export default defaultTabs;
