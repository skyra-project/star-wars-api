name: Branch Imager

on:
  push:
    branches-ignore:
      - main

jobs:
  Build:
    name: Compiling TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore CI Cache
        uses: actions/cache@v2.1.6
        id: cache-restore
        with:
          path: node_modules
          key: ${{ runner.os }}-16-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies if Cache Miss
        if: ${{ !steps.cache-restore.outputs.cache-hit }}
        run: yarn --frozen-lockfile
      - name: Build Code
        run: yarn build
      - name: Upload Microservice bundle to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: microservice_bundle
          path: generated/api/
          if-no-files-found: error

  Publish:
    name: Publish image to container registries
    runs-on: ubuntu-latest
    if: >-
      !(contains(github.event.head_commit.message, '[skip docker]'))
    needs: Build
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Download build bundle artifact
        uses: actions/download-artifact@v2
        with:
          name: microservice_bundle
          path: generated/api/
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get GitHub Branch Name
        id: get_branch_name
        run: echo ::set-output name=branch_name::$(echo $( [ -z "${{ github.head_ref }}" ] && echo ${{ github.ref }} | cut -c12- || echo ${{ github.head_ref }} ) | sed -e 's/\/\|_/-/g' | sed -e 's/@//g')
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2.7.0
        with:
          push: true
          context: .
          tags: |
            skyrabot/star-wars-api:${{ steps.get_branch_name.outputs.branch_name }}
            ghcr.io/skyra-project/star-wars-api:${{ steps.get_branch_name.outputs.branch_name }}
